封装、继承、多态是类的三个特性

 封装是指保护类的成员不被随意访问的能力。通过把类的实现细节设置为 private 我们就能完成类的封装。
封装实现了类的接口和实现的分离。
 封装有两个重要的有点：1、确保用户代码不会无意间破坏封装对象的状态；
                      2、被封装的类的具体实现细节可以随时改变，而无须调整用户级别的代码

 一旦数据成员定义成 private 的，类的作者就可以比较自由的修改数据了，当实现部分发生改变时，只需要检查类的代码本身
以确认这次改变有什么影响；换句话说，只要类的接口不变，用户代码就无须改变。如果数据是 public 的，所有使用原来数据
成员的代码都可能失效，这时我们必须定位病重写所有依赖与老版本实现的代码，之后才能重新使用该程序。
 把数据成员的访问权限设置为 private 还有另外一个好处，这么做能防止由于用户的原因造成数据被破坏。如果我们发现有
 程序缺陷破坏了对象的状态，则可以在有限的范围内定位缺陷；因为只有实现部分的代码可能产生这样的错误。因此讲错误的
 搜索限制在有限范围内能极大地简化更改问题及修正程序等工作

